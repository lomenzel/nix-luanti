{"author":"Just_Visiting","content_warnings":[],"created_at":"2021-01-03T00:37:10.249438","dev_state":null,"donate_url":null,"downloads":997,"forum_url":null,"forums":null,"game_support":[],"issue_tracker":"https://github.com/ExeVirus/autobox/issues/new/choose/","license":"MIT","long_description":"# Autobox\n\nAutobox is Minetest Utility Mod for auto collision/selection boxes for nodes with drawtype=mesh. \n\nThese auto-defined boxes come from its sister lua utility program, [boxgen](https://github.com/ExeVirus/boxgen), \nin the form of <filename>.box files. These are placed in your mod's \"data/\" folder to be used with autbox's only function:\n\n    autobox.register_node(name, data_filename, node_definition, respect_nodes)\n\nThis function takes 4 parameters:\n\n- **name** name of the node, for example: \"yourmod:example\"\n\n- **data_filename** name of the node's box data, for example: \"example.box\"\n\n- **node_definition** This is your normal node_definition you provide to minetest.register_node()\n\n- **respect_nodes** Whether multi-node autobox nodes overwrite existing nodes or not\n    \nPutting it all together:\n\n    autobox.register_node(\"yourmod:example\", \"example.box\", yournode_def, true)\n    \n---\n\nAutobox is special because it allows modders (I believe for the first time) to create nodes using meshes\n*larger* than 3x3x3. Minetest has a restriction on mesh sizes of 3x3x3 for performance tradeoffs, and autobox \nallows us to represent larger meshes in a single-node-like way that respects this limitation. \n\nAny mesh that is larger than 3x3x3 can have \".box\" data generated with [boxgen](https://github.com/ExeVirus/boxgen),\nand autobox will create \"child nodes\" that help represent the \"parent node\" you register.\n\nWhen you dig, punch, rotate, or do anything to a child node, you will do it to all nodes connected with the parent, and vice versa.\nThis allows them to act as a single node. But, to the user, child nodes will rarely be noticed. \n\n---\n\nWhen working with multi-node representations, it's important to realize that rotation can result in orientations where a child node might\nneed to take the place of an existing node, like the ground when you spin a tower mesh updside down. In these cases, if you have registered your nodes with \"respect_nodes\"=true, the node will merely fail to rotate into the orientation and alert the rotating player why and where the rotation failed.\nThis always occurs for protected nodes, even with respect_nodes = false. \n\n---\n\nChild_nodes are not in creative inventory, and should never be dropped in any way. If a player has access to a child node, they either hacked it in, or the server crashed just as the child nodes were being removed in some way. \n\n---\n\n## Sample\n\nTo get a sample of what Autobox can let you do, uncomment the \"init.lua\" file's last line, which loads \"example.lua\". Then load up a creative world with autobox enabled and start placing and rotating and digging some \"autobox:example\" and \"autobox:wagon\" nodes to get a feel for the mod.\n\nHappy *Auto*boxing!\n\n\n","maintainers":["Just_Visiting"],"media_license":"MIT","name":"autobox","provides":["autobox"],"release":9186,"repo":"https://github.com/ExeVirus/autobox","score":7.1,"screenshots":["https://content.luanti.org/uploads/hCZrNR4c9R.jpg"],"short_description":"Auto Collision/Selection Loading Boxes","state":"APPROVED","tags":["library"],"thumbnail":"https://content.luanti.org/thumbnails/1/hCZrNR4c9R.png","title":"Autobox","translation_url":null,"type":"mod","url":"https://content.luanti.org/packages/Just_Visiting/autobox/releases/9186/download/","video_thumbnail_url":null,"video_url":null,"website":null,"dependencies":{"Just_Visiting/autobox":[]},"hash":"03b6nxp0lc0n13cnwqk0cknfadlz7lbqkx6szssbcbzq5raaa7w8"}