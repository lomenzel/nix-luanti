{
  "author": "LibraSubtilis",
  "content_warnings": [],
  "created_at": "2020-12-26T17:46:46.899835",
  "dev_state": "AS_IS",
  "donate_url": null,
  "downloads": 1235,
  "forum_url": "https://forum.luanti.org/viewtopic.php?t=25407",
  "forums": 25407,
  "game_support": [],
  "issue_tracker": null,
  "license": "MIT",
  "long_description": "# Cubi \nThis mod adds simple cubic mobs to the game. They are restricted to the 3d grid.  \nIt is possible to customize the maximum amount of mobs and settings related to spawning.  \n\nI partly use textures created by other authors. I also didn't create the punch sound. The \nattributions for the media files are found in the subfolders with the media.  \n# Cursor \nCursor changes the default behavior of the left and right mouse button. Instead of interacting with \nthe pointed position or node, the position of the turtle is used.   \nUse the left mouse button to replace the wielded item with the node at the turtle position. Use the \nright mouse button to replace the node at the turtle position with the wielded node. Protected \nareas are not affected unless they are not detected by minetest.is_area_protected.  \nIt also enables the player to increase or decrease the volume affected by these buttons. Only cubic \nsizes with an uneven length between 1 and 11 are allowed (including 1 and 11).  \n# Tortou \nTortou is a mod that enables players to turn themselves into a turtle and back. Turtles are \nrestraint to the 3D grid. The turtle is moved with the same keys as the default player model.  \nTo turn yourself into a turtle you need to have the privileges fly and noclip and use the command \nto-turtle. This state is not saved, so you will not be a turtle in case you leave and rejoin. To \nturn yourself back, you need to use the command from-turtle. from-turtle sets properties back to \nthe values that have been saved with to-turtle.  \nIt is possible to set the tick duration through the settings menu.\n\n# Turt \nTurt is a small language used to control a turtle. This mod with the same name uses a player \ntransformed by the Tortou mod. Scripts are executed using the turt command followed by the script \nname without the extension turt. Only scripts in the subdirectory scripts of this mod are executed. \nThe turtle doesn't affect protected nodes. If it encounters an unloaded area, then it waits for the \narea to load. The duration can be set using the settings menu.\n\nF is used to move the turtle into the pointed direction without placing a block.  \nP is used to place the wielded block on the current position and afterwards move into the pointed \ndirection. No items are taken from the inventory.  \n< is used to select the previous item as wielded item.  \n\\> is used to select the next item as wielded item.  \nThe letters L, R, U and D are used to turn the turtle. L turns it to the left, R turns it to the \nright. U turns it upwards and D turns it downwards.  \n\nIt uses various forms of goto commands for control flow.  \nThe if-goto is composed of an I, followed by an integer and a semicolon. It jumps to the position \ncalculated by the index of the I and the integer offset. It is only executed, if the wielded item \nis equal to the node at the current position.  \nThe not-if-goto is composed of an N, followed by an integer and a semicolon. The calculation is the \nsame as for the if-goto. It is only executed, if the wielded item is not equal to the node at the \ncurrent position.  \nX marks a count-goto. It is composed of an X, followed by an integer, a comma, a natural number and \na semicolon. The second argument sets the amount of executions. The counter is saved for the whole \nexecution of the script. If the goto was executed the given amount of times, it is ignored once. \nAfterwards, the counter starts again. Counter gotos can go through a loop like that multiple \ntimes.  \nIt is possible to replace the wielded item with the node type at the current position using C.  \nIt is possible to declare a head with sequences at the beginning of a script. The execution of the \nscript starts after the head. Sequences don't have a preceding character, but end with a Z. Two \nsequences are, therefore, separated by Z. Z is a goto that jumps to the position after the last \nexecuted absolute goto (A). Sequences enable you to reuse code. Z should only be used in the head. \nThe head is separated by the body using |. It is necessary to use the bar even if the head is \nempty.  \nAnother goto used in combination with sequences is the absolute goto. It is composed of an A, a \nnatural number and a semicolon. This goto jumps to the index relative to the beginning of the \nscript. The index of the first letter is 1. It is always executed, but you can jump over it with a \nconditional goto.  \nT is used to teleport the turtle to a position relative to the position of the turtle at the \nbeginning of the script. The command takes three arguments separated by commas for the x, y and z \nvalues. A semicolon also signifies the end of the command. The coordinate values are relative to \nthe local coordinate system determined by the look direction of the turtle at the beginning of the \nscript. When the turtle is facing north (0Â° yaw), the axes of the local and the global coordinate \nsystem are pointing into the same directions. Positive x values are on the right side, negative on \nthe left.  Positive z values are on the front, negative are on the back.  \nIt is possible to place schematics using S followed by the file name without the file extension mts \nand a semicolon. The schematic files used have to be in the subfolder schematics of this mod.  \nThe arguments of commands such as gotos and the teleportation are also associated with indices. It \ndoes not make sense to jump into a goto, but the consistency makes it more simple to write code. If \nthe cursor jumped into a goto, the subsequent numbers, a comma and the semicolon are ignored. If a \ngoto jumps to the first letter of a goto, then the goto is executed.  \nWhen jumping into the arguments of a schematic placement you might experience unwanted behaviour \nbecause some uppercase letters have a special meaning in this language. If you only use lowercase \nletters for the file names, this won't happen. Snake Case is mostly used for file names in Minetest \n(e. g. script_123).  \nA script is executed until the last letter was interpreted or a goto jumps to an invalid index.  \nIt is possible to make the code more readable using spaces or other characters not used in this \ndescription. They also have an index, but otherwise have no effect. There is no guarantee that I am \nnot going to expand this language in the future and use currently ignored characters, except \nwhitespace characters.  \n\n# Turtloop\nA simple node based hyperloop travelling system. It adds a node used as tube and a ticket.\nIn order to travel with the hyperloop, players need to wield a ticket and use the \"place\"-trigger\n(right click for mouse users) on any node of a tube. The travelling system determines the direction\nbased on the pointed direction (param2/face dir values) of the tube nodes and teleports you to the \nend of the tube.  \nIf parts of the tube are not loaded, the player is moved to the edge of the loaded area and waits \nfor it to load. The duration can be set using the settings menu. \nIn case there is a solid or damaging node in the target destination, the player is returned to the \nentry position.\n\nI didn't create the sounds used in Turtloop. The attributions are in the sounds subfolder.",
  "maintainers": ["LibraSubtilis"],
  "media_license": "Other (Free/Open)",
  "name": "tortou",
  "provides": ["cubi", "cursor", "tortou", "turt", "turtloop"],
  "release": 11808,
  "repo": "https://gitlab.com/LibraSubtilis/tortou.git",
  "score": 4,
  "screenshots": [
    "https://content.luanti.org/uploads/158d076e42.png",
    "https://content.luanti.org/uploads/ee870fe31a.png",
    "https://content.luanti.org/uploads/c776fb1f9e.png",
    "https://content.luanti.org/uploads/c5eef185de.png"
  ],
  "short_description": "Turtle graphics, hyperloop travelingsystem and cubic mobs.",
  "state": "APPROVED",
  "tags": ["building", "creative", "mobs", "player_effects", "transport"],
  "thumbnail": "https://content.luanti.org/thumbnails/1/158d076e42.png",
  "title": "Tortou",
  "translation_url": null,
  "type": "mod",
  "url": "https://content.luanti.org/packages/LibraSubtilis/tortou/releases/11808/download/",
  "video_thumbnail_url": null,
  "video_url": null,
  "website": null,
  "dependencies": { "LibraSubtilis/tortou": [] },
  "hash": "0a5ys8s5fc8bz2iy168s08cs989h4vs3mxfzsi4ip60yg2nax12z"
}
