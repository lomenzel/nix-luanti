{
  "author": "Emojiminetest",
  "content_warnings": [],
  "created_at": "2023-06-04T13:06:11.294891",
  "dev_state": "ACTIVELY_DEVELOPED",
  "donate_url": null,
  "downloads": 378,
  "forum_url": null,
  "forums": null,
  "game_support": [],
  "issue_tracker": "https://github.com/C-C-Minetest-Server/dialog/issues",
  "license": "GPL-3.0-or-later",
  "long_description": "# Messing up with NPC dialogs?\nThis mod provides a easy-to-use dialog API. This mod was extracted from [the game Glitch](https://content.luanti.org/packages/Wuzzy/glitch/), a game in the 2022 Minetest Game Jam. This mod is backward-compactible with the upstream.\n\nOn top of the upstream one, this mod did the following changes:\n\n1. `dialog.show_dialogtree` now accepts a optional `speech_id` to specity the staring speech ID.\n2. `options` of [Speech definition tables](#Speech) now can be a function receiving the player object and returns a list of [options](#Option).\n3. Options now align to the bottom. Previously, options align to the top.\n\nIf this mod is installed to a Glitch game, this mod's functions will replace the ones provided by the game, while keeping the dialogs.\n\n## API\n### `dialog.register_dialogtree(name, def)`\nRegister a dialog tree.\n\n* `name`: The ID of the dialog tree.\n* `def`: A [dialog tree definition table](#dialog-tree).\n\n### `dialog.register_speaker(name, def)`\nRegister a speaker.\n\n* `name`: The ID of the speaker.\n* `def`: A [speaker defination table](#Speaker).\n\n### `dialog.show_dialogtree(player, dialogtree_id, speech_id)`\nShow a dialog tree.\n\n* `player`: The player object of the target.\n* `dialogtree_id`: The ID of the [dialog tree](#dialog-tree) to be shown.\n* `speech_id` (Optional): The starting speech to be loaded. Default to `\"start\"` for string-indexed dialog trees or `1` to number-indexed ones. *New in 1F616EMO fork.*\n\n## Definition table\n### Speaker\nA table containing informationof a speaker. Keys contain:\n\n* `name`: A string, the display name of the speaker. It should not be formspec-escaped.\n* `portrait`: A string of texture name, or a table of them, of the speaker. If it is a table, a random one will be chosen.\n* `portrait_animated`: A boolean. If true, `portrait` should specify a 8-frame 16x16 (16x128) png like [the one in Glitch](https://codeberg.org/Wuzzy/Glitch/src/branch/master/mods/glitch_dialog/textures/glitch_dialog_portrait_white_noise_anim.png).\n\n### Dialog tree\nA table containing information of a dialog tree. Keys contain:\n\n* `speeches`: A table, either number- or string-indexed, containing all the [speech definitions](#Speech). If number-indexed, the dialogs will be played one-by-one; if string-indexed, each speech mush contain at least one `options`.\n* `force_stay`: A boolean. If true, dialog window is forced to stay open. Known bug: force-keeping a dialog open does not work reliably if the player spam the Esc key. Workaround: Don't have any required dialogues.\n* `on_exit(player)` (Optional): A function being called when the entire dialogtree was left. Not called when the current [speech](#Speech) has its own `on_exit` function.\n\n## Speech\nA table containing information of a speech. Keys contain:\n\n* `speaker`: A string, the ID of the [speaker](#Speaker).\n* `text`: A string, the text to be spoken by the speaker in the speech. It should not be formspec-escaped.\n* `on_enter(player)` (Optional): Called when this speech entered.\n* `on_exit(player)` (Optional): Called when this speech exited. If present and the speech is the last one of the dialog tree, the `on_exit` function of its [dialog tree](#dialog-tree) is not called.\n* `options`: Either one of the following:\n    * A table containing a list of [options](#Option).\n    * `function(player)`: A function receiving the current player as its parameter, and return a table containing a list of [options](#Option). *New in 1F616EMO fork.*\n    * If the dialog tree is number-indexed, this key is optional, and a \"Continue\" option is automatically generated for the user to go to the next speech.\n\n## Option\nA table containing information of an option. Keys contain:\n\n* `text`: A string, the text to be shown on the button. It should not be formspec-escaped.\n* `action`: A string, either one of the following:\n    * `\"quit\"`: The dialog closes. `on_exit` callbacks of the [speech](#Speech) or the [dialog tree](#dialog-tree) are called.\n    * `\"speech\"`: Another speech opens.\n* When `action = \"speech\"`:\n    * `dialogtree_id` (Optional): A string, the dialog tree to be searched for the [speech](#Speech). Default to the current [dialog tree](#dialog-tree).\n    * `next_speech`: A string, or a number, of the [speech](#Speech) to be shown.\n",
  "maintainers": ["Emojiminetest"],
  "media_license": "CC-BY-SA-4.0",
  "name": "dialog",
  "provides": ["dialog"],
  "release": 19069,
  "repo": "https://github.com/C-C-Minetest-Server/dialog",
  "score": 1.2,
  "screenshots": ["https://content.luanti.org/uploads/7d9d3a26ad.png"],
  "short_description": "Dialogs with options",
  "state": "APPROVED",
  "tags": ["gui", "library"],
  "thumbnail": "https://content.luanti.org/thumbnails/1/7d9d3a26ad.png",
  "title": "Dialogs",
  "translation_url": null,
  "type": "mod",
  "url": "https://content.luanti.org/packages/Emojiminetest/dialog/releases/19069/download/",
  "video_thumbnail_url": null,
  "video_url": null,
  "website": null,
  "dependencies": { "Emojiminetest/dialog": [] },
  "hash": "1mjdx648n9k6h775bzlyhqnxhb36cf2qcg8yb6rnmzvb8zlb79g4"
}
