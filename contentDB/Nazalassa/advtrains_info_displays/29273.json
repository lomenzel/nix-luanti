{
  "author": "Nazalassa",
  "content_warnings": [],
  "created_at": "2024-08-26T16:38:21.814516",
  "dev_state": "WIP",
  "donate_url": null,
  "downloads": 837,
  "forum_url": null,
  "forums": null,
  "game_support": [],
  "issue_tracker": null,
  "license": "GPL-2.0-or-later",
  "long_description": "Note: due to Advtrains issues, the current version of this mod has the following flaw: displays are not saved across restarts.\n\n# Advtrains Info Displays\n\n**IMPORTANT: you will need Advtrains version 2.4.4 or higher, or this mod will not work!**\n\nAdvtrains Info Displays is an API that allows Advtrains trains (and other vehicles) to display still text, scroling text, and images on displays (inside or outside the train). It also provides LuaATC functions and a tool to interact with the displays.\n\n## Technical overview\n\nEach display on a wagon is associated to a certain \"display slot\", and will display the contents of that display slot. Trains can have several display slots; each of them is independent from the others, and their contents are shared between all the wagons of the train. Each display slot has a name - e.g, \"side\", \"line\"... - by which it is referred. See the [Conventions](#conventions) section for more details on slot names.\n\nLet us call a \"display item\" something that can be displayed on a display; it can be still text, scrolling text, or and image.\n\nA display slot can contain any amount of (display) items; it will cycle through them, i.e if it has the two items \"Line 2\" and \"Chasm of Segfault\", then it will display \"Line 2\", then \"Chasm of Segfault\", then \"Line 2\", etc. It is possible to specify the duration each item should be displayed.\n\n## Conventions\n\nThis section specifies naming conventions for advtrains_info_displays slots.\n\n**Private display slot names** - Any slots on a wagon that are intended for so-called [\"private use\"](#api) should have an underscore and the name of the wagon before their name, in order to avoid naming collisions.\n\n**Standard display slot names** - The following slots' primary uses are listed in the following table:\n\n| Name         | Location                          | Commonly displays                  |\n| ------------ | --------------------------------- | ---------------------------------- |\n| line         | Front, next to \"front\" or \"side\"  | The train's line                   |\n| front        | Front of the train                | Destination, RC, ...               |\n| side         | Side of the train                 | Destination, RC, service type, ... |\n| inside_doors | Inside the train, above the doors | Line map, traffic information      |\n| speed        | Inside, driver's stand            | Current train speed                |\n| max_speed    | Inside, driver's stand            | Train maximum speed                |\n\n**Defaults** - The following slots are provided with global defaults:\n\n| Name      | Default                    | Provided by                    |\n| --------- | -------------------------- | ------------------------------ |\n| line      | The train's line           | advtrains_info_displays (core) |\n| speed     | The train's currrent speed | advtrains_info_displays (core) |\n| max_speed | The train's maximum speed  | advtrains_info_displays (core) |\n\n## LuaATC additions\n\nAdvtrains Info Displays will attempt to register new LuaATC functions to allow LuaATCs to interact with a train's display slots. (Advtrains provides such a mechanism for versions 2.4.4 onwards.) However, the contents of display slots will *not* be preserved across reloads. (See the [Known caveats](#known-caveats) section for more details.)\n\nThe available new functions in the LuaATC system are:\n\n```\nset_info_display(train_id, name, contents)\n    > name: the name of the display. Any string is accepted, but the wagons may\n      not have displays configured to display the contents of that display slot.\n      (See the wagon's mod for details on what display slots the wagon displays.)\n    > contents: either a table of strings, or a single string. If it is a single\n      string, it is splitted on newlines, *including the last newline(s)*.\nSets the contents of the info display with the specified name, on the train with\nthe specified train_id, to (a) the contents of the table, or (b) the string\n(depending of the nature of the contents argument), creating one display item\nper (resp.) element of the table / line of the string.\n\nNote that if `contents` is nil, then the display is erased and its default (if\nany) is displayed, whereas if `contents` is an empty string, an empty table,\netc., the default for the slot will not be displayed (even if it exists).\n```\n\nA `get_info_display()` function is in the works. It will return a table of display items.\n\n## Display item syntax\n\nDisplay items are strings which specify what should be displayed. The simplest kind of display item is simply some still text to be displayed. For example, `Line 2` will display \"Line 2\", and `Chasm of Segfault` will display \"Chasm of Segfault\". If a display slot ahs several display items, then each item will be displayed for the default duration (3 seconds).\n\nIt is possible to specify the duration of a display item by prepending a prefix to it. The prefix consists of a number (the duration of the item, in seconds) followed by a semicolon (\";\"). For example, `5;Chasm of Segfault` will display \"Chasm of Segfault\" for 5 seconds.\n\nIt is also possible to display something else than still text; this can be specified by prepending a letter to the prefix. The available letters are:\n\n* `S`: scrolling text. The text following the prefix will be scrolled on the display, from right to left. The scrolling will end after the duration of this display item; for example, `S5;Chasm of Segfault` will scroll \"Chasm of segfault\" on the display; after 5 seconds have elapsed the display will switch to the next display item.\n* `I`: image. The text following the prefix will not be rendered as text, but interpreted as a Minetest texture string. The texture may be of any dimensions. For example, `I2;subway_map_line_2.png` will display the image named \"subway_map_line_2.png\" on the display for 2 seconds. Since it is a raw texture string, it is possible to use `[fill`, `[combine` and friends.\n\nNote that you **must** add a prefix if you want to prepend a letter. Note that you also can **not** mix letters together: for example, `IS5:banner.png` will not scroll the image on the display.\n\n## Slot defaults\n\nIt is possible to specify defaults for slots, i.e things that will be displayed on any displays associated with that slot when the slot has nothing particular to display (e.g after a `set_info_display(id, \"line\", nil)`). Note that it is possible to prevent displaying a default by making the slot display e.g an empty string or an empty table (e.g `set_info_display(id, \"line\", \"\")`).\n\nA default is either a string, which will be displayed as still text, or a function, which will be called, passing it the wagon table and the train table as arguments; its return value value will be displayed as still text. Defaults are applied wagon-wise, so it is possible e.g to have a slot display the wagon's ID by default.\n\nThere are two kinds of defaults: global defaults and wagon-kind-specific defaults. See the [Conventions](#conventions) section for naming information.\n\n### Global defaults\n\nThese defaults apply to all wagons. They are registered using the `register_default()` function.\n\n### Wagon-kind-specific defaults\n\nThese defaults only apply to wagons of a certain kind, e.g `dvtrains:subway_wagon`s. They are passed as a table as the fourth argument to `set_textures()`.\n\n## Display inspection tool\n\nSimply punch a wagon with the tool and a formspec will open, which allows you to change the contents of the display slots of the train to which the wagon belongs. Built-in help is provided, although maybe it is not very clear.\n\n## API\n\nSee [README](https://codeberg.org/nazalassa/advtrains_info_displays#api).\n\n## Known caveats\n\n* Advtrains does not save all train data when saving files; thus the display slots will not be saved across restarts. There is currently no way to specify more train fields to be saved.\n* **(fixed in 2.4.4)** Advtrains does not currently provide a mechanism to register custom LuaATC functions.",
  "maintainers": ["Nazalassa"],
  "media_license": "GPL-2.0-or-later",
  "name": "advtrains_info_displays",
  "provides": ["advtrains_info_displays"],
  "release": 29273,
  "repo": "https://codeberg.org/Nazalassa/advtrains_info_displays.git",
  "score": 173.1,
  "screenshots": ["https://content.luanti.org/uploads/dd36341319.png"],
  "short_description": "A library that uses font_api to render text outside Advtrains trains. Supports several displays per wagon.",
  "state": "APPROVED",
  "tags": ["library", "transport"],
  "thumbnail": "https://content.luanti.org/thumbnails/1/dd36341319.png",
  "title": "Advtrains Info Displays",
  "translation_url": null,
  "type": "mod",
  "url": "https://content.luanti.org/packages/Nazalassa/advtrains_info_displays/releases/29273/download/",
  "video_thumbnail_url": null,
  "video_url": null,
  "website": null,
  "dependencies": {
    "Nazalassa/advtrains_info_displays": [
      {
        "is_optional": false,
        "name": "font_api",
        "packages": [
          "BuckarooBanzay/mesecons_lab",
          "jgordon510/gridlocks",
          "mt-mods/display_modpack"
        ]
      },
      {
        "is_optional": false,
        "name": "advtrains",
        "packages": ["orwell/advtrains"]
      }
    ],
    "mt-mods/display_modpack": [
      {
        "is_optional": false,
        "name": "xcompat",
        "packages": [
          "1248/regnum",
          "BuckarooBanzay/mesecons_lab",
          "BuckarooBanzay/super_sam",
          "bell07/whynot_game",
          "mt-mods/xcompat",
          "Kimapr/nonsensical_skyblock",
          "jgordon510/gridlocks",
          "mt-mods/dreambuilder_game"
        ]
      }
    ],
    "orwell/advtrains": []
  },
  "hash": "1kd3cszg16qbbk350mpj354pil5chlq93nxginglh16ykyrxrsp0"
}
