{
  "author": "rstcxk",
  "content_warnings": [],
  "created_at": "2024-08-04T05:09:13.678649",
  "dev_state": "BETA",
  "donate_url": null,
  "downloads": 222,
  "forum_url": null,
  "forums": null,
  "game_support": [],
  "issue_tracker": "https://codeberg.org/xXx_GLOCKrzmitz_xXx/lush/issues",
  "license": "AGPL-3.0-or-later",
  "long_description": "LUSH - lua ultimate shell\n\nLush is a shell interpreter for minetest inspired by the\nPOSIX shell and minecraft syntax.\nThe benefits are:\n\n- 79 commands\n- sequential and conditional command execution\n- parameters and parameter expansion\n- subshells\n- various datatypes which are consistently parsed\n- implicit datatype conversion\n- lazy loaded\n- inline lua execution\n- easier and more powerful API for defining commands\n\n# Project status\n\nLush is being actively developed and its currently in a mostely complete state\nits completely usable but the internal API is unstable and poorly documented\n\nContributions are welcome, in the form of PRs, bug reports or feature requests.\nif you would like to implement something but are lost in the code, \ndont mind opening up an issue about it\n\n# Mods\n\nLush is made up of mods, here are all the mods:\n\n- **lush_core**: Core part of lush, adds the shell interpreter and provides all the necessary APIs\n- **lush_builtin**: Mod that adds many general and useful commands\n- **lush_utilities**: Mod that adds utilities for lush, these dont generally\naffect the game environment\n- **lush_messaging**: Mod that rewrites the in game chat to provide many useful features, such as\nmore convinient private messages, user blocking and optionally chat filtering using the filter++ liberary\n- **lush_moderation**: Mod that adds commands for server moderation\n- **lush_gui**: Mod that adds commands for displaying formspecs and HUDs\n- **lush_tpr**: Mod that adds commands for teleport requests\n\n# Commands\n\nLush also adds 79 commands:\n(for the time being i am lazy and only list 56, see help menu for complete list)\n\n- **lush_utilities**:\n- `echo <arguments>`\n- `append <string>`\n- `lines <range>`\n- `wc <range>`\n- `prepend <string>`\n- `set <param>`\n- `split <seperator>`\n- `match <exit>`\n- `lush <code>`\n- `export <parameter name> <value> [--read-only] [--volatile]`\n- `env`\n- **lush_builtin**:\n- `days`\n- `lag <seconds per globalstep>`\n- `set_node <position> <node name>`\n- `time <time> [--permament]`\n- `lunch <targets> <speed vector>`\n- `teleport <targets> to <position>`\n- `kill <targets>`\n- `damage <targets> <amount> [--type <damage type>]`\n- `spawnpoint <player> <position>`\n- `clear_spawnpoint <player>`\n- `heal <targets> <amount>`\n- `list`\n- `seed`\n- `lsmods`\n- `invis <players> on|off`\n- `give <players> <item name> <meta table>` --WIP\n- `pulverize <items>`\n- `fix_items <items>`\n- `lsitems <items>`\n- `nodeinfo metadata|inventory|groups|name|param1|param2 [--human]`\n- **lush_moderation**\n- `ban <players> <time> [--script]`\n- `privs <player>`\n- `lsbans`\n- `unban <players> [--script]`\n- `kick <players> <reason>`\n- `grant <players> [privs|privileges] <priv> ... [--time <time>]`\n- `revoke <players> [privs|privileges] <priv> ... [--time <time>]`\n- `mute <players> <length>`\n- **lush_doas**\n- `doas <player> <shell code>`\n- `su <player>`\n- `sb`\n- **lush_tpr**\n- `tpr <player>`\n- `tpa <player>`\n- **lush_messaging**\n- `bc <message>`\n- `msg <player> <message>`\n- `block <player>`\n- `unblock <player>`\n- `lsblocks`\n- **lush_command_managment**\n- `blacklist_command <command> ...`\n- `whitelist <command> ...`\n- `override_command_privs <command> (add | remove | set) <priv> ...`\n- `restore_command_privs <command>`\n- `ls_command_overrides`\n- **lush_findbiome**\n- `lsbiomes`\n- `findbiome <biome name> ... [--tp] [--start-pos <position>] [--resolution <number>] [check-amount <number>]`\n\nLush aims to add every useful command.\nIf you would like to see some command, feature requests are welcome\n\n# Usage\n\n- [Basics](#basics)\n- [Calling multiple commands](#calling-multiple-commands)\n- [Subshells](#subshells)\n- [Datatypes](#datatypes)\n- [Implicit type conversion](#implicit-type-conversion)\n- [Misc](#misc)\n- - [Inlinue lua code](#inlinue-lua-code)\n\n\n## Basics\n\nCommands need to start with a ! to invoke the shell\n```{bash, eval = FALSE, highlight = FALSE}\n!echo hello world!\nhello\nworld!\n```\n\n`/` works too but there are some caveats, keep reading to know the difference.\nFor the rest of the guide i will be using `!`\n```{bash, eval = FALSE, highlight = FALSE}\n/echo hello world!\nhello\nworld!\n```\n\nEnclose in quotes to make it not split into many arguments.\nSingle quotes are also supported\n```{bash, eval = FALSE, highlight = FALSE}\n!echo \"hello world!\"\nhello world!\n\n!echo 'hello world'\nhello world!\n```\n\nEscape sequences are supported in double quotes, but not in single quotes\n```{bash, eval = FALSE, highlight = FALSE}\n!echo '\\\\'\n\\\\\n!echo \"\\\\\"\n\\\n```\n\n## Calling multiple commands\n\nCommands can be executed one after another\n```{bash, eval = FALSE, highlight = FALSE}\n!echo hello; echo world\nhello\nworld\n```\n\nCommands can be run only if the one before succeeds, or only if they fail\n```{bash, eval = FALSE, highlight = FALSE}\n!exit 0 && echo success\nsuccess\n\n!exit 1 || echo failure\nfailure\n```\n\nOutput of one command can be _piped_ into another command.\nThis means that the output of the command is given as input to another command\n```{bash, eval = FALSE, highlight = FALSE}\n!echo hello world | append \" text\"\nhello text\nworld text\n```\n\nAll previous thingies can be combined whenever you feel like it\n```{bash, eval = FALSE, highlight = FALSE}\n!var=\"hello world\"; echo $var | append \" text\" && echo \"success!\" || echo \"failure!\"\nhello world\nsuccess!\n```\n\nWhen starting commands with a `/` instead of `!` you lose many of those features.\n\n- `!` - runs a shell\n- `/` - runs a command\n\nthe shell differs from a simple command invocation, it can call multiple commands at once (as shown above) and set\nparameters \n\n```{bash, eval = FALSE, highlight = FALSE}\n/echo hello\nhello;\n\n/echo hello; echo world\nhello; echo world\n```\n\n## Subshells\n\nSubshells are their own shell instances seperate from the main shell.\n\nCommands in paranthesis are treated as a subshell\n```{bash, eval = FALSE, highlight = FALSE}\n!(echo \"days:\"; days)\ndays:\n7\n```\n\nOutput of a subshell can be piped\n```{bash, eval = FALSE, highlight = FALSE}\n!(echo \"days:\"; days) | append \" text\"\ndays: text\n7 text\n```\n\nVery useful if you want to run a group of commands after a command fails/succeeds\n```{bash, eval = FALSE, highlight = FALSE}\n!exit 0 || echo \"failure:\"; echo \"error message:\"\nerror message\n\n-- the second command ran even though the first command didnt fail.\n-- do this instead\n\n!exit 0 || (echo \"failure:\"; echo \"error message:\")\n\n```\n\nProcess substitution is a special subshell thats expands to the subshell's output, similiarly to how bash does it.\n```{bash, eval = FALSE, highlight = FALSE}\n!echo $(days)\n7\n```\n\n## Datatypes\n\nDifferent expressions have different types in lush\n\nDue to contentDB description limits. You will have to look at the [user guide](https://codeberg.org/xXx_GLOCKrzmitz_xXx/lush/src/branch/master/doc/guide.pdf) for that information\n\n## Implicit type conversion\n\nLush implicitly converts the datatypes of command arguments you give according to what each command expects.\nThis means that the command syntax is more flexible and intuitive to use\n\nFor example:\n\n```{bash, eval = FALSE, highlight = FALSE}\n!teleport joe_doe to admin\n```\n\n\"joe_doe\" is converted to objectref of player with that name\n\"admin\" is converted to position of player named \"admin\"\n\nSome conversions dont work unless you have the requred privileges,\ni.e you cannot get the position of every player online with selectors unless\nyou have the `lush_get_object_pos` privilege\n\n\n## Misc\n\n## Inlinue lua code\n\nYou can execute inline lua code and pass it as an argument to a command (or any other place).\nOnly players with the `lush_inline_lua` privilege can do this, for security reasons\n```{bash, eval = FALSE, highlight = FALSE}\n!echo `return tostring(2 + 2)`\n4\n```\n\nlua code can take place of a command\n```{bash, eval = FALSE, highlight = FALSE}\n!`context.stdout:push(\"hello\")` | append \" world\"\nhello world\n```\n\nThe lua code has access to `context` variable, read the API docs to learn about it.\nyou can ignore that if you dont want to return any info to the shell\n\n# Learn more\n\nyou can learn more about lush here:\n\n- [API rundown](https://codeberg.org/xXx_GLOCKrzmitz_xXx/lush/src/branch/master/doc/API_rundown.pdf)\n- [Docs for server owners](https://codeberg.org/xXx_GLOCKrzmitz_xXx/lush/src/branch/master/doc/for_server_owners.pdf)\n- [user guide](https://codeberg.org/xXx_GLOCKrzmitz_xXx/lush/src/branch/master/doc/guide.pdf) - A **LOT** had to be cut out of the usage section to fit the 10k character limit. Certain huge features were completely cut off from the usage section above\n\n# Credits\n\nPeople that created lush:\n\n- rstcxk - i made the thing\n\npeople from whom i have taken code:\n\n- sfan5 - node name normalization function from [worldedit](https://content.minetest.net/packages/sfan5/worldedit/), the inconsistent command parsing of worldedit is what pushed me over the edge to make lush\n- Warr1024 - `lag` command from the [szutilpack](https://content.minetest.net/packages/Warr1024/szutilpack/) modpack\n- SkyBuilder1717 - the `v` command from [Essentials](https://content.minetest.net/packages/SkyBuilder1717/essentials/)\n\npeople who made things that inspired me:\n\n- ThePython10110 - the [better_commands](https://content.minetest.net/packages/ThePython/better_commands/) from whom i took the idea of datatypes and some syntax\n- orwell - the [@-chat](https://content.minetest.net/packages/orwell/atchat/) mod that i reimplemented\n- enchant97 - the [simple_commands](https://content.minetest.net/packages/enchant97/simple_commands/) mod from whom i took the idea of accepting strings like \"noon\" or \"sunset\" for the `time` command\n- ROllerozxa - the [permatime](https://content.minetest.net/packages/ROllerozxa/permatime/) mod for the idea of `--permament` flag for the `time` command",
  "maintainers": [
    "rstcxk"
  ],
  "media_license": "AGPL-3.0-or-later",
  "name": "lush",
  "provides": [
    "lush_builtin",
    "lush_command_managment",
    "lush_core",
    "lush_doas",
    "lush_findbiome",
    "lush_gui",
    "lush_messages",
    "lush_moderation",
    "lush_tpr",
    "lush_utilities"
  ],
  "release": 27239,
  "repo": "https://codeberg.org/xXx_GLOCKrzmitz_xXx/lush",
  "score": 5.8,
  "screenshots": [
    "https://content.luanti.org/uploads/5e7c57528b.png"
  ],
  "short_description": "fully featured shell interpreter",
  "state": "APPROVED",
  "tags": [
    "chat",
    "developer_tools",
    "library",
    "oneofakind__original",
    "server_tools"
  ],
  "thumbnail": "https://content.luanti.org/thumbnails/1/5e7c57528b.png",
  "title": "Lush",
  "translation_url": null,
  "type": "mod",
  "url": "https://content.luanti.org/packages/rstcxk/lush/releases/27239/download/",
  "video_thumbnail_url": null,
  "video_url": null,
  "website": null,
  "dependencies": {
    "Wuzzy/findbiome": [],
    "luk3yx/flow": [
      {
        "is_optional": false,
        "name": "formspec_ast",
        "packages": [
          "luk3yx/prang",
          "RedundantC/wis_part1",
          "luk3yx/formspec_ast",
          "Kimapr/nonsensical_skyblock",
          "Thunder1035/pacman"
        ]
      }
    ],
    "neocraft1293/warn": [],
    "rstcxk/lush": [
      {
        "is_optional": false,
        "name": "flow",
        "packages": [
          "Kimapr/nonsensical_skyblock",
          "luk3yx/flow"
        ]
      },
      {
        "is_optional": false,
        "name": "warn",
        "packages": [
          "neocraft1293/warn"
        ]
      },
      {
        "is_optional": false,
        "name": "findbiome",
        "packages": [
          "Hi_World/newplanet",
          "Wuzzy/mineclone2",
          "VoxelForge/voxelforge",
          "ryvnf/mineclonia",
          "Wuzzy/findbiome",
          "EmptyStar/asuna"
        ]
      }
    ]
  },
  "hash": "18km9lnrxxb0147h2bxn0kd0822aywpv3szyn45bxhl4nrfl4lzm"
}
