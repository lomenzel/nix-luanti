{"author":"Signal_","content_warnings":[],"created_at":"2024-12-01T17:11:44.853251","dev_state":"ACTIVELY_DEVELOPED","donate_url":null,"downloads":256,"forum_url":null,"forums":null,"game_support":[{"confidence":11,"game":{"author":"ryvnf","name":"mineclonia","release":29735,"short_description":"Survival sandbox game inspired by Minecraft.","thumbnail":"https://content.luanti.org/thumbnails/1/864a6133e4.png","title":"Mineclonia","type":"game"},"supports":true}],"issue_tracker":null,"license":"CC0-1.0","long_description":"Libskinupload shifts the maintenance burden of providing player skins from server administrators to the players who use those skins, by providing an interface through which players can upload their own skins directly in-game.\n\n\\[ ! ] Note: When updating to v6, skin meta will automatically be migrated to the new backend, but the old backend will be preserved for downgrade compatibility. If you want to remove the old backend entirely, run `/skinmanage remove_fragmented_meta`.\n\n#### Features:\n* Skin uploading. Players can upload custom skins by converting them to base64 and pasting the result into a form field.\n* Skin descriptions support a Markdown knockoff, see below for supported syntax.\n* Skin searching. Players can search for skins by name instead of scrolling through the entire list.\n* Personal skins. Players can upload skins that only they can use.\n* Players have to understand how to convert an image to base64 to upload custom skins.\n* Reviewing. Skin requests must be approved by a player with the `skin_review` privilege before they can be used.\n* As a rate limit, each player can only have one unapproved skin request at a time by default. Subsequent requests will overwrite prior requests.\n* The number of maximum concurrent requests can be configured per-player by reviewers.\n* Skin reviewers are notified when new requests become available, and skin uploaders are notified when a request is approved or denied.\n* Players can be prevented from uploading skins by granting them the `no_skin_upload` privilege.\n* Skins can be removed using `/skindelete`.\n* Dynamic allocation. Skins will only take up media space if someone has actually worn them during the server session.\n* Generally game-agnostic and future-proof. Libskinupload sets player textures directly and is accessed with chatcommands, and thus ought to work out of the box in most environments.\n* As a corollary, UV correctness is not directly enforced. It is up to skin reviewers to decide if the provided skin is acceptable on the player model used.\n* Explicit compatibility with 3d_armor, u_skins, and Mineclonia.\n* Adds a Unified Inventory page.\n\n###### 'Markdown' syntax:\n* `__text__` => _text_\n* `**text**` => **text**\n* `^^text^^` => <u>text</u>\n* `$$text$$` => `text` (Pretend the dollar signs are backticks)\n\n###### Commands:\n* `/skinupload` | Opens the skin upload dialog.\n* `/skinreview` | Opens the skin review dialog. Only accessible to reviewers.\n* `/skinchoose` | Opens the builtin skin selection dialog.\n* `/skinget <name>` | Print the ID of the skin currently worn by the target player.\n* `/skinchange <ID>` | Set your skin by ID, bypassing the skin selection dialog.\n* `/skinforget` | Tells libskinupload to stop tracking your currently worn skin. This will allow you to change your skin to one provided by another mod without conflct.\n* `/skindelete <ID>` | Removes the specified skin from the filesystem. This will reset the skin of anyone wearing the target skin when they rejoin.\n* `/skinlimit <name> <limit>` | Set the maximum number of concurrent requests for player <name> to <limit>. Only accessible to reviewers.\n* `/skinmanage [list | meta <ID>| cull | alter <ID> <changes>]` | Passing `meta <ID>` will print the metadata of the target skin. Passing `cull` will remove all image files without an associated meta file, to prevent potential crashes. Passing `alter <ID> ...` will override the target skin's metadata using the format `<key>=<value>[,<key2>=<value2>]*`. For example, `/skinmanage alter 0 name = Altered, description = New description` will set the name of skin 0 to 'Altered' and the description to 'New description'. Passing anything else will do nothing. Only accessible to reviewers.\n\n###### Caveats:\n* Players have to understand how convert an image to base64 to upload custom skins. (There are several web tools for this, however.)\n* The `skin_review` privilege is not automatically granted to admins because on_grant is not called that way, breaking the notification mechanism.\n* The no_skin_upload privilege has potentially undesirable interaction with `/grantme all`.\n* Because libskinupload knows nothing about other skin libraries and so cannot override their callbacks, by default players must call `/skinforget` before changing their skin to one provided by another mod. For servers, I recommend creating a shim mod to do this automatically, for better player experience.\n* At the moment, the player model must be named `character.b3d` for previews to work right (with the exception of Mineclonia).\n* Wieldhands can only be regenerated on server restart. This is a Minetest limitation.\n* Must be modded to not add a Unified Inventory page.\n* The use of dynamic media will make Multicraft clients explode if optimized media is not disabled. This is only a caveat because Minetest for iOS doesn't exist yet.\n* The liberal use of `model[...]` can make the web client explode.\n\t\n###### Migrating:\nMigrating to libskinupload from another skin mod is straightforward, because libskinupload stores textures in a subfolder of the world directory. Adding a new skin involves these steps:\n\n* Copy the image file to $world_dir/libskinupload_skins/libskinupload_uploaded_skin_$id.png, where $world_dir is the world directory and $id is the skin's numeric ID.\n* Add the following key to libskinupload_meta.json: `\"$id\":{\"c\": \"$creator\", \"d\": \"$description\", \"n\": \"$name\", \"p\": false}`\n* Set the contents of $world_dir/libskinupload_nextid.txt to a number greater than the greatest ID of an existing skin.\n\t\nThis process can be automated: a PHP script is included to migrate skins from u_skins to libskinupload, which should be easily adaptable to fit other situations.","maintainers":["Signal_"],"media_license":"CC0-1.0","name":"libskinupload","provides":["libskinupload"],"release":29823,"repo":null,"score":30.8,"screenshots":["https://content.luanti.org/uploads/44f2011463.png"],"short_description":"A skin system that allows players to upload custom skins in-game.","state":"APPROVED","tags":["gui","multiplayer","server_tools","skins"],"thumbnail":"https://content.luanti.org/thumbnails/1/44f2011463.png","title":"libskinupload","translation_url":null,"type":"mod","url":"https://content.luanti.org/packages/Signal_/libskinupload/releases/29823/download/","video_thumbnail_url":null,"video_url":null,"website":null,"dependencies":{"Signal_/libskinupload":[]},"hash":"0bnrmghv0xj2l2vij6qfjg94nbmdh5gds3jvryhrp878xpdgvkii"}