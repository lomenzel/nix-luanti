{
  "author": "sorcerykid",
  "content_warnings": [],
  "created_at": "2018-09-08T12:36:26.071501",
  "dev_state": null,
  "donate_url": "https://liberapay.com/sorcerykid",
  "downloads": 1217,
  "forum_url": "https://forum.luanti.org/viewtopic.php?t=20699",
  "forums": 20699,
  "game_support": [],
  "issue_tracker": null,
  "license": "MIT",
  "long_description": "Stopwatch is a utility for developers to very quickly benchmark portions of Lua code, but without the complexity and overhead of enabling the mod profiler. I created this mod because my code was becoming littered with far too many time-keeping calculations while debugging. It should be fully compatible with all versions of Minetest 0.4.x+ since it only depends on the monotonic clock function.\n\nFor the latest release notes, as well as technical support requests, please visit the forum topic.\n\n## Installation\n\n1. Unzip the archive into the mods directory of your subgame\n2. Rename the stopwatch-master directory to \"stopwatch\"\n3. Add \"stopwatch\" to the depends.txt file of mods using the Stopwatch API.\n\n## Usage Instructions\n\nYou will first need to create a Stopwatch object at the top of the mod that you want to benchmark. The constructor accepts four parameters: a unique identifier for the test series (required), the output color of the results (default is \"white\"), the numeric scale of each value (default is \"ms\"), and the numeric precision of each value (default is 3)\n\n#### local S, S_ = Stopwatch( id, color, scale, prec )\n\nAfter initializing its internal state, the constructor returns two functions that can be used to benchmark your code.\n\n#### S( )\n\n#### S_( is_show )\n\nThe S( ) function starts a new trial for the given test series, and the S_( ) function stops the current trial, outputting the elapsed execution time if is_show is true. When the server is shutdown, the total elapsed time for the test series will be output in addition to a variety of other statistics:\n\n* **total** = the total execution time for the test series.\n* **rep** = the number of trials within the test series\n* **avg** = the mean execution time of all the trials\n* **min** = the minimum execution time of all the trials\n* **max** = the maximum execution time of all the trials\n* **med** = the median execution time of all the trials\n* **dev** = the standard deviation of all the trials\n\nA new Stopwatch object should be instantiated for each additional benchmark that you wish to perform. In addition, you will want to append digits or some other unique signifier to distinguish the corresponding start and stop functions.\n\nIn this example, I'm measuring the performance of Lua's table.insert function in append vs. prepend mode:\n\n```\nlocal S1, S1_ = Stopwatch(\"table_prepend\")\nlocal S2, S2_ = Stopwatch(\"table_append\")\n\nlocal y = { }\nS1( )\nfor x = 0, 5000 do\n        table.insert( y, 1, x )\nend\nS1_( )\n\ny = { }\nS2( )\nfor x = 0, 5000 do\n        table.insert( y, x )\nend\nS2_( )\n```\n\nThe output should look something like this.\n\n![](https://i.imgur.com/GcQsEpj.png)\n\nBy performing multiple iterations, it is possible to get a more representative sample for each trial.\n\n![](https://i.imgur.com/xbleErH.png)\n\nIt is worth noting that Lua's print( ) function tends to be somewhat CPU intensive. Therefore you should avoid outputting the per-trial execution times for nested test series, otherwise the results will be skewed. For linear test series, such instrumentation overhead is less a concern since the execution times are already calculated prior to being output.\n\nHowever, depending on the time-sensitive nature of your routines, you should still be mindful of this caveat.",
  "maintainers": [
    "sorcerykid"
  ],
  "media_license": "MIT",
  "name": "stopwatch",
  "provides": [
    "stopwatch"
  ],
  "release": 618,
  "repo": "https://bitbucket.org/sorcerykid/stopwatch",
  "score": 2.4,
  "screenshots": [
    "https://content.luanti.org/uploads/yIbKmWZLve.png"
  ],
  "short_description": "Stopwatch is Lua-based benchmarking API for Minetest developers",
  "state": "APPROVED",
  "tags": [
    "developer_tools",
    "library"
  ],
  "thumbnail": "https://content.luanti.org/thumbnails/1/yIbKmWZLve.png",
  "title": "Stopwatch",
  "translation_url": null,
  "type": "mod",
  "url": "https://content.luanti.org/packages/sorcerykid/stopwatch/releases/618/download/",
  "video_thumbnail_url": null,
  "video_url": null,
  "website": null,
  "dependencies": {
    "sorcerykid/stopwatch": []
  },
  "hash": "05k295qgyshq7x388f466rqmlzr6f4cql4brcmjghbpg53kh6hvl"
}
