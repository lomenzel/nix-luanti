{
  "author": "sorcerykid",
  "content_warnings": [],
  "created_at": "2018-07-31T01:41:39.487603",
  "dev_state": null,
  "donate_url": "https://liberapay.com/sorcerykid",
  "downloads": 1747,
  "forum_url": "https://forum.luanti.org/viewtopic.php?t=20393",
  "forums": 20393,
  "game_support": [],
  "issue_tracker": null,
  "license": "MIT",
  "long_description": "Auth Redux is a drop-in replacement for the builtin authentication handler of Minetest. It is designed from the ground up to be robust and secure enough for use on high-traffic Minetest servers, while also addressing a number of outstanding engine bugs (including #5334 and #6783 and #4451) as described last year in the [Critical bug in builtin authentication handler](https://forum.minetest.net/viewtopic.php?f=6&t=16656) forum topic.\n\nAuth Redux is completely Lua-driven, with no external dependencies. It interfaces seamlessly with Minetest's authentication handler API, therefore no complicated setup or configuration is required. It is intended to be compatible with all versions of Minetest 0.4.14+ and 5.x and has been successfully tested under CentOS7, Windows 10, and Windows XP.\n\nFor the latest release notes, as well as technical support requests, please visit the forum topic.\n\n## Overview\n\nAuth Redux provides an efficient and scalable back-end solution for player authentication, making it suitable for even the most demanding server environments. It has been put to the test with a database of over 520,000 registered users -- with no in-game overhead!\n\n* **High-Performance Journaling System.**\nTo protect the master database against corruption and data loss, all transactions are serially recorded within a journal, thereby reducing the frequency and intensity of disk writes. In the event of a server crash or power outage, any pending transactions are committed to the master database.\n\n* **Simple Ruleset-Based Login Filtering.**\nMARS is an easy-to-learn scripting language that affords a first line of defense against unwanted visitors. Both restrictive and permissive security models can be enforced via rulesets, allowing every login request to be filtered according to conditional action-chains with custom error messages.\n\n* **Expanded Master Database Schema.**\nThe master database supports additional metadata to aid in reviewing and monitoring login activity, including the timestamp of the first login, the total time spent playing, the total number of player sessions, etc. This information can prove invaluable for command-line reporting and analysis tools.\n\nThe project is a WIP and will be undergoing continuous development based upon your suggestions and feedback. New features and bug-fixes will be announced here as they become available.\n\n## Installation:\n\nOnly a few basic steps are required to begin using the Auth_Redux mod immediately with your server.\n\n1. Unzip the archive into the mods directory of your game\n2. Rename the auth_rx-master directory to \"auth_rx\"\n3. Execute the conversion scripts (see usage instructions below)\n\nLinux distributions already include the awk command-line utility, so no additional setup is required. However Microsoft Windows users will need to install Gawk for Windows.\n\n## Basic Database Import:\n\nIf you intend to use Auth Redux with an existing world, then the default authentication database must be converted. A simple awk script is made available for this purpose. It is located within the 'tools' subdirectory.\n\nThe following commands will begin the conversion process. Depending on the size of your auth.txt file, it may take several seconds to complete:\n\n    > cd auth_rx/tools\n    > awk -f convert.awk -v mode=convert ~/.minetest/worlds/world/auth.txt\n\nSince the original 'auth.txt' file is no longer needed, it should be renamed for safe-keeping and to prevent conflicts. If you perform daily backups of your world directory, then it is strongly recommend that you archive these three files:\n\n* auth.db - master database\n* auth.dbx - transaction log\n* greenlist.mt - ruleset definition\n\nBoth files must have read and write permissions. The master database and transaction log should never be removed nor modified directly.\n\nIf you are creating a new world, then you can initialize the master database using the same command as above. Simply, create an empty 'auth.txt' file beforehand.\n\n## Command-Line Analytics Script\n\nThe transaction log of Auth Redux has always served a dual purpose. Besides protecting against data loss and corruption, it also permits efficient reporting and analysis. With this release, I've included a command-line analytics script for just this purpose!\n\nYou can review wide variety of server and player metrics for any given 24-hour period:\n\n* Total Players - total number of unique players that joined per day\n* Total New Players - total number of new players that joined per day\n* Total Player Sessions - total number of player sessions per day\n* Total Login Failures - total number of failed logins per day\n* Total Login Attempts - total number of attempted logins per day\n* Overall Server Uptime - aggregate uptime percentage of the server per day\n* Maximum Connected Clients - maximum number of connected clients per day\n* Minimum Connected Clients - minimum number of connected clients per day\n* Maximum Player Lifetime - maximum session duration amongst all players per day\n* Average Player Lifetime - average session duration amongst all players per day\n\nMost of these statistics are also broken up into an hour-by-hour format. The following statistics are player-specific:\n\n* Total Sessions - total number of sessions of each player\n* Total Lifetime - aggregate session duration of each player\n\nGenerating reports of player login activity is both quick and easy. It can even be accomplished while the server is still online. From the shell, change to the tools subdirectory and issue the following command:\n\n```\ncd auth_rx/tools\nawk -f report.awk -v days=1 -v type=txt ~/.minetest/worlds/new_survival/auth.dbx\n```\n\nGiven a \"days\" parameter of 1 and a type parameter of \"txt\" ,this will analyze the journal file in the \"new_survival\" world, and generate a plain-text report of player login activity for yesterday. Changing the \"days\" parameter to 0 will obtain data from today. So on and so forth.\n\nYou can optionally redirect output to a file or even pipe to another command. This would be useful for receiving automated daily reports by email. By changing the \"type\" parameter to `js`, the results will be formatted as a JSON for embedding into a dynamic Website. Here is a very simple DHTML page with an AJAX request. Of course you are free to custom-tailor the output entirely to your needs.",
  "maintainers": ["sorcerykid"],
  "media_license": "MIT",
  "name": "auth_rx",
  "provides": ["auth_rx"],
  "release": 3153,
  "repo": "https://bitbucket.org/sorcerykid/auth_rx",
  "score": 3.7,
  "screenshots": [
    "https://content.luanti.org/uploads/ChKtHsJ1ut.png",
    "https://content.luanti.org/uploads/dn21d3FfRK.png",
    "https://content.luanti.org/uploads/Rh5fl1VlRF.png",
    "https://content.luanti.org/uploads/27l6b9igbm.png",
    "https://content.luanti.org/uploads/AtDHuSscRs.png",
    "https://content.luanti.org/uploads/mgT6pa07Hu.png"
  ],
  "short_description": "Auth Redux is a drop-in replacement for the builtin authentication handler of Minetest",
  "state": "APPROVED",
  "tags": ["complex_installation", "server_tools"],
  "thumbnail": "https://content.luanti.org/thumbnails/1/ChKtHsJ1ut.png",
  "title": "Auth Redux",
  "translation_url": null,
  "type": "mod",
  "url": "https://content.luanti.org/packages/sorcerykid/auth_rx/releases/3153/download/",
  "video_thumbnail_url": null,
  "video_url": null,
  "website": null,
  "dependencies": {
    "sorcerykid/auth_rx": []
  },
  "hash": "1zb285kbxg7h5qrzx75s37d422p1dbl8wp1ryak9lck7ppjjjbyi"
}
