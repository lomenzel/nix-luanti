{
  "author": "AliasAlreadyTaken",
  "content_warnings": [],
  "created_at": "2024-06-02T03:44:18.218928",
  "dev_state": "ACTIVELY_DEVELOPED",
  "donate_url": "https://ko-fi.com/yourland",
  "downloads": 90,
  "forum_url": null,
  "forums": null,
  "game_support": [],
  "issue_tracker": "https://gitea.your-land.de/your-land/yl_scheduler/issues",
  "license": "MIT",
  "long_description": "\n# yl_scheduler\n\n## Purpose\n\nThis mod allows you to tie the execution of tasks to real life utc time.\n\n## Download\n\nGet it from https://gitea.your-land.de/your-land/yl_scheduler\n\n## Installation\n\n1. Copy the \"yl_scheduler\" folder to your mod directory.\n2. Enable the mod in your world.mt file.\n\n## Configuration\n\n```\nyl_scheduler.debug = false\n```\nSet to true to enable debug mode\n\n```\nyl_scheduler.execution_interval = 1.0\n```\nSet this to a higher value for less lag but also less precision.\n\n```\nyl_scheduler.maximum_timeframe = 104w\n```\nSet this to how much time into the future you want to allow tasks created.\n\nUnderstands m for minute, d for day, w for week. You cannot mix those.\n\n```\nyl_scheduler.save_path\n```\nSet this to where in the worldfolder you want the JSON files stored.\n\n```\nyl_scheduler.taskadd_privs\nyl_scheduler.taskremove_privs\nyl_scheduler.tasklist_privs\nyl_scheduler.taskclean_privs\n```\nSet those to the list of privs you want to allow the execution of the corresponding commands\n\n## Usage\n\nThis mod targets servers, but should work in singleplayer, too. It comes with no direct content but exposes functions you can use in your mod.\n\n### Chatcommands\n\n```\n/scheduler_add time$function$param1, param2, param3, ...$mask1, mask2, mask3, ...$notes\n```\nAdds a new task that executes a function with params at the given time and optionally adds notes\n\ntime: At best a utc timestamp, in a future update some natural time. See [Supported Time formats](#supported-time-formats)\n\nfunction: Name of a public function\n\nparameter list: Please note parameters handed over this way are all strings, the mask needs to typecast them or you need to write a wrapper.\n\nIf a stringparameter has a true comma(,) in it, you need to escape it. Example: `/scheduler_add 123$minetest.chat_send_all$Attention\\\\, everyone!!`\n\nmask list: List of types of there parameter list. Choose from number, boolean, string and nil. Default is string\n\nnotes: Optionally add notes to that task, so you don't have to guess what it is about\n\n```\n/scheduler_remove <UUID>\n```\nRemoves the given UUID from the task list.\n\nExample: `/scheduler_remove 8d3f379f-3c13-4c2e-bb72-16f8326b636d`\n\n```\n/scheduler_list <UUID|key=aaa>\n```\nWithout parameters, lists ALL tasks - be careful, that may be a lot. Example: `/scheduler_list`\n\nWith parameter it lists all tasks where the UUID contains the parameter. Example: `/scheduler_list 379f`\n\nWith parameter `key=mystring` it returns all tasks where the given key contains \"mystring\". Example: `/scheduler_list notes=changes the spawnpoint`\n\n```\n/scheduler_clean [past|done]\n```\nWithout parameter, cleans up both past and done tasks.\n\nWith parameter `done` it only cleans up tasks that were already executed.\n\nWith parameter `past` it only cleans up tasks where the scheduled execution time is in the past.\n\nCleaned up tasks are permanently deleted.\n\n### Modmakers\n\nUse the following public functions to get, set, list, remove and clean tasks\n\n```\nyl_scheduler.get_task(UUID)\n```\nReturns a table with the values of this UUID or nil, if it does not exist\n\n```\nyl_scheduler.set_task(at, func, params, owner, notes)\n```\nAdds this task to the list and returns `true, UUID` if accepted, `false, \"errormessage\"` if not.\n\n```\nyl_scheduler.list_all_tasks()\n```\nReturns `true, {\"UUID1\", \"UUID2\", ...}` if one or more tasks were found, `false, {}` if none were found.\n\n```\nyl_scheduler.find_ids(part of UUID)\n```\nReturns `true, {\"UUID1\", \"UUID2\", ...}` if one or more tasks were found, `false, {}` if none were found.\n\n```\nyl_scheduler.find_task(part of UUID)\n```\nReturns `true, {{task1}, {task1}, ...}` if one or more tasks were found, `false, {}` if none were found.\n\n```\nyl_scheduler.remove_task(UUID)\n```\nReturns `true, {task}` if one task was successfully removed, `false, \"errormessage\"` otherwise.\n\n```\nyl_scheduler.clean_past_tasks()\n```\nRemoves all tasks of which the intended execution date is in the past.\n\nReturns `true, amount_deleted, amount_remaining` if one or more tasks were successfully cleaned up, `false, \"errormessage\"` otherwise.\n\n```\nyl_scheduler.clean_executed_tasks()\n```\nRemoves all tasks which were already executed. This \n\nReturns `true, amount_deleted, amount_remaining` if one or more tasks were successfully cleaned up, `false, \"errormessage\"` otherwise.\n\n```\nyl_scheduler.execute_task(UUID)\n```\nExecutes the task with UUID and sets the done value to the current timestamp\n\nReturns `true, {task}` AFTER the done value was set if the execution was started or `false, \"errormessage\"` if for some reason it was not.\n\nA successful execution does NOT mean the called function achieved what it was supposed to - only that it was found, fed the parameters and executed without immediate crash.\n\n### Supported Time formats {#supported-time-formats}\n\n* utc timestamp. Example: 1712045385\n\nSome future update:\n\n* natural time. Examples: \"00:00\", \"09:45:00\", \"18\" without date, \"2.4.2024 18:00\" or \"02.04.2024 18:00\"\n* professional time. Examples: \"2400\", \"0945\", \"1800\" without date, \"20240402_1800\" with date\n* YYYY-MM-DDTHH:MM:SS Examples: \"2024-04-02T13:45:30\"\n\nWhat you leave out will be assumed. If given without seconds or minutes, both values will be 00, if given without date, it will be assumed you mean \"today\"\n\nThe mod will try to determine what you mean and refuse to create a task if it doesn't understand\n\n## Limitations\n\nSome of those limitations may be addressed in a future update\n\n* UTC is the only supported timezone\n* No catchup scheduling! Means if multiple tasks would have fired while the server was down, they will ALL fire at the next available step!\n* Your responsibility to load the mapblocks you want to work in and similar\n* The parameter list of the `/scheduler_add` should support various time formats\n* The parameter params of the `/scheduler_add` Does not yet support tables\n* There is no setting to execute the function in a safe manner via pcall\n* There is no setting to automatically cleanup\n* functions that are executed in the same second/serverstep have no guaranteed execution order\n* More performant solution: Moving target execution time\n\n## Alternatives\n\nNo direct alternatives, but somewhat related:\n\n* Snippets (Allows you to execute code at server start)\n* minetest.after (Allows you to periodically execute functions)\n\n## Supported versions\n\nIf you run yl_scheduler, but something is wrong, please [file a bug](https://gitea.your-land.de/your-land/yl_scheduler/issues/new). PRs also welcome.\n\nThere is no reason to believe it doesn't work anywhere, but you never know.\n\n## Allied projects\n\nIf you know a project that uses this mod tell us and we will add it to the list.\n\n## Uninstall\n\nRemove it from your mod folder or deactivate it in your world.mt\n\nMods that depend on it will cease to work, if the mod is removed without proper replacement.\n\n## License\n\nSee [LICENSE.md](./LICENSE.md)\n\n* Code MIT AliasAlreadyTaken\n* Screenshot CC0 Styxcolor\n\n## Thank you\n\n* Styxcolor\n",
  "maintainers": [
    "AliasAlreadyTaken"
  ],
  "media_license": "CC0-1.0",
  "name": "yl_scheduler",
  "provides": [
    "yl_scheduler"
  ],
  "release": 25353,
  "repo": "https://gitea.your-land.de/your-land/yl_scheduler.git",
  "score": 1.7,
  "screenshots": [
    "https://content.luanti.org/uploads/c92c1cc4fe.png"
  ],
  "short_description": "Execute tasks based on utc",
  "state": "APPROVED",
  "tags": [
    "library",
    "multiplayer",
    "server_tools"
  ],
  "thumbnail": "https://content.luanti.org/thumbnails/1/c92c1cc4fe.png",
  "title": "YL Scheduler",
  "translation_url": null,
  "type": "mod",
  "url": "https://content.luanti.org/packages/AliasAlreadyTaken/yl_scheduler/releases/25353/download/",
  "video_thumbnail_url": null,
  "video_url": null,
  "website": null,
  "dependencies": {
    "AliasAlreadyTaken/yl_scheduler": []
  },
  "hash": "1aqi1zi8n8dmw8dhq0wrmfcn5zynxpzcfm272a6nfb3kfh3aaaiz"
}
