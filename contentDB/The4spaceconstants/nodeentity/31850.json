{
  "author": "The4spaceconstants",
  "content_warnings": [],
  "created_at": "2025-06-21T11:43:25.830937",
  "dev_state": "BETA",
  "donate_url": null,
  "downloads": 13,
  "forum_url": null,
  "forums": null,
  "game_support": [],
  "issue_tracker": "https://github.com/The4codeblocks/luanti_node_entities/issues",
  "license": "MIT",
  "long_description": "# Node entity library (`nodeentity`)\nLibrary for functional node entities, with minimal setup\n\n## Namespace reference\n```lua\nnodeentity = {\n  function register(nodename), -- registers a node entity in accordance to a defined node (does not update when definition changes), returns new entity name\n  function add(pos, node, noupdate), -- creates a functional node entity at specified position in accordance to specified MapNode table with automatic registration (actually returns an ObjectRef)\n  function read_world(pos, anchor, minp, maxp), -- creates a nodeset at <pos> with nodes from <minp> to <maxp> relative to <anchor>\n  -- exposed internal tables\n  nodeentities = {[entityID] = luaentity}, -- table of node entities, not guaranteed to be active\n  fs_context = {\n    [formname] = {\n      [playername] = {formspec, entity} \n    }\n  }, -- table of active forms in nodeentities\n  registered = {[nodename] = entityname}, -- map from node names to entity names\n}\n```\n\n## Position format\n```lua\nlocal position = {\n  x, y, z -- position components\n  relative = entityID -- optional relativity specifier, makes the position relative to the specified node entity or its corresponding node entity set\n}\n```\nThese relative positions should work in most `core` namespace functions (library feature), if any of them don't work, make an issue\n\n## Node entity sets (`\"nodeentity:nodeset\"`)\n2 node entities *attached* to the same nodeset are able to access each-other with `core` namespace functions\n\nTo add a node entity to a node set, attach it as specified: `nodeobject:set_attach(nodeset, \"\", pos * 10)`, the engine requires the pos multiplication, but the automatic inclusion of the entity works as normal\n\n## Node definition interface\n```lua\nlocal nodedef = {\n  ...\n  function _nodeentity_step(self, dtime, moveresult), -- runs exclusively on node entities, identical to <step> in entity defintions\n  <other callbacks> -- current entity is appended to the end of function arguments (abms and lbms included)\n  ...\n}\n```\n\n## Entity fields\n```lua\nlocal entity = {\n  ...\n  function _showfs(playername, formname, formspec), -- used like core.show_formspec, includes the nuances in node forms\n  _metadata, -- imitation of NodeMetaRef\n  _invname, -- inventory name used in showing current node entity inventory\n  _timer, -- lua implementation of NodeTimerRef\n  _eID, -- current entity's persistent node entity ID\n  ...\n}\n",
  "maintainers": ["The4spaceconstants"],
  "media_license": "MIT",
  "name": "nodeentity",
  "provides": ["nodeentity"],
  "release": 31850,
  "repo": "https://github.com/The4codeblocks/luanti_node_entities.git",
  "score": 5.5,
  "screenshots": ["https://content.luanti.org/uploads/9bacd2faaf.png"],
  "short_description": "Library for functional node entities.",
  "state": "APPROVED",
  "tags": ["building_mechanics", "developer_tools", "library"],
  "thumbnail": "https://content.luanti.org/thumbnails/1/9bacd2faaf.png",
  "title": "Node entity library",
  "translation_url": null,
  "type": "mod",
  "url": "https://content.luanti.org/packages/The4spaceconstants/nodeentity/releases/31850/download/",
  "video_thumbnail_url": null,
  "video_url": null,
  "website": null,
  "dependencies": { "The4spaceconstants/nodeentity": [] },
  "hash": "0s0bqmsv99vilrbs72cn3cz1pg30azrhjbzi5yhwnc424945kcaq"
}
