{"author":"AFCM","content_warnings":[],"created_at":"2021-07-02T18:40:35.015267","dev_state":null,"donate_url":null,"downloads":635,"forum_url":null,"forums":null,"game_support":[],"issue_tracker":"https://github.com/minetest-palamod/db_manager/issues","license":"GPL-3.0-or-later","long_description":"# Database Manager API\n\nThis project is a mod adding an API to manage sqlite3 databases.\n\n## Requirements\n\nIn order to run and use this mod, you will need to:\n\n### Install sqlite3\n\nFolow the install guide for your system on the [official website](https://sqlite.org)\n\nOn Ubuntu you can just install it from apt:\n```\nsudo apt install sqlite3\n```\n\n### Install lsqlite3\n\n[lsqlite3](http://lua.sqlite.org) is a sqlite wrapper for lua.\n\nYou should install it using [luarocks](https://luarocks.org/modules/dougcurrie/lsqlite3).\n\n### Add this mod to secure.trusted_mods\n\nIn order to load the `lsqlite3` library, this mod needs to access an insecure environment.\n\nAdd `db_manager` to `secure.trusted_mods` setting in your `minetest.conf`\n\n## API\n\nThis mod aims to remove the pain of working with databases.\nMods can create databases without accessing insecure environment or messing with other mods databases and manage sql schemats freely.\n\nCheckout the `.exemples` folder for some exemple mods.\n\n### `db_manager.database(name, schemat)`\n\nThis function allow a mod to create or open a database.\n\n* name: should be in the form \"modname:database_name\"\n* schemat (optional): a sql schemat (string) to apply to the database\n\nReturns a `DbRef`\n\n### `db_manager.get_schemat(name)`\n\nThis function can get any sql shemat from any mod as a string.\n\n* name: in the form \"modname:filename\"\n\nThe function will search the file in the `sql` directory of the path of the modname and return it as a string.\n\n### `DbRef`\n\n#### `DbRef:new(name, db)`\n\nCreate a new DbRef object with:\n\n* name: the name of the database\n* db: the name of a db object (optained by calling `sqlite3.open()`)\n\nThis function is for internal use.\n\n#### `DbRef:exec(query)`\n\nThis function execute a query and doesn't return anything.\nIf `lsqlite3` returns an error, a error will be shown in log.\n\n#### `DbRef:get_rows(query)`\n\nThis function execute query and returns a lua table.\n\n\n## Settings\n\n### `db_manager.error_level`\n\nThis setting allow you to choose between two behaviour then a database error is catched:\n\n* log: the error will just be thrown in log\n* error: the error will cause a hard crash","maintainers":["AFCM"],"media_license":"GPL-3.0-or-later","name":"db_manager","provides":["db_manager"],"release":9217,"repo":"https://github.com/minetest-palamod/db_manager","score":1.5,"screenshots":[],"short_description":"Database Manager API","state":"APPROVED","tags":["complex_installation","library"],"thumbnail":null,"title":"Database Manager","translation_url":null,"type":"mod","url":"https://content.luanti.org/packages/AFCM/db_manager/releases/9217/download/","video_thumbnail_url":null,"video_url":null,"website":"https://github.com/minetest-palamod/db_manager","dependencies":{"AFCM/db_manager":[]},"hash":"0193g3wvk16cy9kkppyndb0fs4imxklr98vwjhrkwr909s1s6yxa"}