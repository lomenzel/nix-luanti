{
  "author": "plamiumai",
  "content_warnings": [],
  "created_at": "2025-07-20T14:25:10.193565",
  "dev_state": "AS_IS",
  "donate_url": null,
  "downloads": 8,
  "forum_url": null,
  "forums": null,
  "game_support": [],
  "issue_tracker": null,
  "license": "MIT",
  "long_description": " #  IntelligenceFramework API \n# Have you ever wanted to integrate AI into your mod directly? It is possible now with IntelligenceFramework.\n\n\n\n# How to access IntelligenceFramework from your mod:\n# First of all, your mod has to know where IntelligenceFramework is located. This is simple, as you can do it by just adding this line of code at the top of your mod's init.lua:\n```local RNN = dofile(core.get_modpath(\"intelligenceframework\") .. \"/init.lua\")```\n\n# You can create a RNN instance by using:\n```\nlocal your_ai_name = RNN.new({\n    hidden_size = 32, -- Example: larger hidden size\n    learning_rate = 0.01, -- Example: different learning rate\n    charset = \"abcdefghijklmnopqrstuvwxyz .,!?'0123456789\" -- Example: extended charset\n})\n```\n\n# You can add training data to your RNN by using:\n```\nyour_ai_name:add_training_data({\n    \"the quick brown fox jumps over the lazy dog\",\n    \"hello world, this is a test\",\n    \"luanti is a great game engine\",\n})\n```\n\n# You can let your mod train the RNN (it is highly recommended, if you don't train it, it will produce random characters and symbols) by using:\n```\ncore.after(1, function()\n    local success, message = your_ai_name:train(5000, function(epoch, loss)\n    end)\nend)\n```\n\n# And you can register a command to interact with the AI by using:\n```\ncore.register_chatcommand(\"myai\", {\n    params = \"<seed>\",\n    description = \"Generate AI text based on seed using a RNN.\",\n    func = function(name, param)\n        if param == \"\" then\n            return false, \"Please provide a seed text\"\n        end\n        local result = your_ai_name:generate(param:lower(), 50) -- Generate 50 characters\n        return true, \"MyAI: \" .. result\n    end,\n})\n```\n# Please notice: you are not limited to a command. You can use your_ai_name:generate(param:lower(), 50) anywhere you want.\n\n\n# Full Example Code:\n\n```\nlocal RNN = dofile(core.get_modpath(\"intelligenceframework\") .. \"/init.lua\")\n\n\n\t-- Create an RNN instance\nlocal your_ai_name = RNN.new({\n    hidden_size = 32, -- Example: larger hidden size\n    learning_rate = 0.01, -- Example: different learning rate\n    charset = \"abcdefghijklmnopqrstuvwxyz .,!?'0123456789\" -- Example: extended charset\n})\n\n -- Add training data\nyour_ai_name:add_training_data({\n    \"the quick brown fox jumps over the lazy dog\",\n    \"hello world, this is a test\",\n    \"luanti is a great game engine\",\n})\n\n-- Train the model (can be done on server startup or via a command)\ncore.after(1, function()\n    local success, message = your_ai_name:train(5000, function(epoch, loss)\n    end)\nend)\n\n\n-- Register a chat command to use the RNN\ncore.register_chatcommand(\"myai\", {\n    params = \"<seed>\",\n    description = \"Generate AI text based on seed using MyRNN\",\n    func = function(name, param)\n        if param == \"\" then\n            return false, \"Please provide a seed text\"\n        end\n        local result = your_ai_name:generate(param:lower(), 50) -- Generate 50 characters\n        return true, \"MyAI: \" .. result\n    end,\n})\n```\n\n# This mod can make the server lag (if any other mods use it) when the server starts due to AI Training.",
  "maintainers": ["plamiumai"],
  "media_license": "MIT",
  "name": "intelligenceframework",
  "provides": ["intelligenceframework"],
  "release": 32076,
  "repo": null,
  "score": 1.6,
  "screenshots": ["https://content.luanti.org/uploads/fd1b3251a6.png"],
  "short_description": "Provide an AI RNN API for developers.",
  "state": "APPROVED",
  "tags": ["library"],
  "thumbnail": "https://content.luanti.org/thumbnails/1/fd1b3251a6.png",
  "title": "IntelligenceFramework",
  "translation_url": null,
  "type": "mod",
  "url": "https://content.luanti.org/packages/plamiumai/intelligenceframework/releases/32076/download/",
  "video_thumbnail_url": null,
  "video_url": null,
  "website": null,
  "dependencies": { "plamiumai/intelligenceframework": [] },
  "hash": "0zjm57ic5b8js9d178kmmzj24px0q3qhvp74knmb43izhryinh4q"
}
